{"ast":null,"code":"import React from \"react\";\nimport \"./App.css\";\nimport chatBot from \"./components/chatBot\";\n\nclass Chatbox {\n  constructor() {\n    this.args = {\n      openButton: document.querySelector(\".chatbox__button\"),\n      chatBox: document.querySelector(\".chatbox__support\"),\n      sendButton: document.querySelector(\".chatbox__send\")\n    };\n    this.status = false;\n    this.reply = [];\n  }\n\n  toggle(chatbox) {\n    this.status = !this.status;\n\n    if (this.status) {\n      chatbox.classList.add(\"chatbox--active\");\n    } else {\n      chatbox.classList.remove(\"chatbox--active\");\n    }\n  }\n\n  onSend(chatbox) {\n    var textField = chatbox.querySelector('input');\n    let text1 = textField.value;\n\n    if (text1 === \"\") {\n      return;\n    }\n\n    let msg1 = {\n      name: \"User\",\n      message: text1\n    };\n    this.reply.push(msg1); //$SCRIPT_ROOT is declared in a html file in the tutorial\n\n    fetch($SCRIPT_ROOT + '/predict', {\n      method: 'POST',\n      body: JSON.stringify({\n        message: text1\n      }),\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.json()).then(r => {\n      let msg2 = {\n        name: \"woman security bot\",\n        message: r.answer\n      };\n      this.message.push(msg2);\n      this.updateChat(chatbox);\n      textField.value = '';\n    }).catch(error => {\n      console.error('Error:', error);\n      this.updateChat(chatbox);\n      textField.value = '';\n    });\n  }\n\n  updateChat(chatbox) {\n    var html = '';\n    this.reply.slice().reverse().forEach(function (item) {\n      if (item.name === \"woman security bot\") {\n        html += '<div>' + item.message + '</div>';\n      } else {\n        html += '<div>' + item.message + '</div>';\n      }\n    }); //const chatboxreply = chatbox.querySelector('.chatbox__messages');\n    //TO DO: these html need to be append to the main file\n  }\n\n  display() {\n    const {\n      openButton,\n      chatBox,\n      sendButton\n    } = this.args;\n    openButton.addEventListener(\"click\", () => this.toggle(chatBox));\n    sendButton.addEventListener(\"click\", () => this.onSend(chatBox)); //Hanzii\n\n    const node = chatBox.querySelector(\"input\");\n    node.addEventListener(\"keyup\", _ref => {\n      let {\n        key\n      } = _ref;\n\n      if (key === \"Enter\") {\n        this.onSend(chatBox);\n      }\n    });\n  }\n\n}\n\nconst App = () => {\n  //creating object\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\"\n  }, [/*#__PURE__*/React.createElement(chatBot)]); // To be instated after completing the methods\n  // const chatbox = new Chatbox();\n  // chatbox.display();\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","chatBot","Chatbox","constructor","args","openButton","document","querySelector","chatBox","sendButton","status","reply","toggle","chatbox","classList","add","remove","onSend","textField","text1","value","msg1","name","message","push","fetch","$SCRIPT_ROOT","method","body","JSON","stringify","mode","headers","then","r","json","msg2","answer","updateChat","catch","error","console","html","slice","reverse","forEach","item","display","addEventListener","node","key","App","createElement","className"],"sources":["C:/Users/Admin/OneDrive - McGill University/Desktop/HackOdhisa2.0-WomenSecurity/frontend/src/App.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport chatBot from \"./components/chatBot\";\r\n\r\nclass Chatbox {\r\n    constructor() {\r\n        this.args = {\r\n            openButton: document.querySelector(\".chatbox__button\"),\r\n            chatBox: document.querySelector(\".chatbox__support\"),\r\n            sendButton: document.querySelector(\".chatbox__send\"),\r\n        };\r\n\r\n        this.status = false;\r\n        this.reply = [];\r\n    }\r\n\r\n    toggle(chatbox) {\r\n        this.status = !this.status;\r\n        if (this.status) {\r\n            chatbox.classList.add(\"chatbox--active\");\r\n        } else {\r\n            chatbox.classList.remove(\"chatbox--active\");\r\n        }\r\n    }\r\n\r\n    onSend(chatbox) {\r\n        var textField = chatbox.querySelector('input');\r\n        let text1 = textField.value\r\n        if (text1 === \"\") {\r\n            return;\r\n        }\r\n\r\n        let msg1 = { name: \"User\", message: text1 }\r\n        this.reply.push(msg1);\r\n        //$SCRIPT_ROOT is declared in a html file in the tutorial\r\n        fetch($SCRIPT_ROOT + '/predict', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ message: text1 }),\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n            .then(r => r.json())\r\n            .then(r => {\r\n                let msg2 = { name: \"woman security bot\", message: r.answer };\r\n                this.message.push(msg2);\r\n                this.updateChat(chatbox)\r\n                textField.value = ''\r\n\r\n            }).catch((error) => {\r\n                console.error('Error:', error);\r\n                this.updateChat(chatbox)\r\n                textField.value = ''\r\n            });\r\n\r\n    }\r\n\r\n    updateChat(chatbox) {\r\n        var html = '';\r\n        this.reply.slice().reverse().forEach(function(item, ) {\r\n            if (item.name === \"woman security bot\")\r\n            {\r\n                html += '<div>' + item.message + '</div>'\r\n            }\r\n            else \r\n            {\r\n                html += '<div>' + item.message + '</div>'\r\n            }\r\n        });\r\n\r\n        //const chatboxreply = chatbox.querySelector('.chatbox__messages');\r\n        //TO DO: these html need to be append to the main file\r\n    }\r\n\r\n    display() {\r\n        const { openButton, chatBox, sendButton } = this.args;\r\n        openButton.addEventListener(\"click\", () => this.toggle(chatBox));\r\n        sendButton.addEventListener(\"click\", () => this.onSend(chatBox)); //Hanzii\r\n\r\n        const node = chatBox.querySelector(\"input\");\r\n        node.addEventListener(\"keyup\", ({ key }) => {\r\n            if (key === \"Enter\") {\r\n                this.onSend(chatBox);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nconst App = () => {\r\n    //creating object\r\n    return React.createElement(\"div\", { className: \"App\" }, [\r\n        React.createElement(chatBot),\r\n    ]);\r\n    // To be instated after completing the methods\r\n    // const chatbox = new Chatbox();\r\n    // chatbox.display();\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}